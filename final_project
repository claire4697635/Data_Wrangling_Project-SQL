---
title: "QBS181_Final_ClaireWang"
output: html_document
---


Question 1 (a):
```{r}
setwd("~/QBS 181")
library(readr)
hypertension <- read_csv("~/QBS 181/IC_BP_v2.csv")

colnames(hypertension)[4] <- "BPStatus"
colnames(hypertension)
head(hypertension, n=10L)
```
Question 1 (b):
```{r}
hypertension$BPStatus[hypertension$BPStatus == "Hypo1"] <- 1
hypertension$BPStatus[hypertension$BPStatus == "Normal"] <- 1

hypertension$BPStatus[hypertension$BPStatus == "Hypo2"] <- 0
hypertension$BPStatus[hypertension$BPStatus == "HTN1"] <- 0
hypertension$BPStatus[hypertension$BPStatus == "HTN2"] <- 0
hypertension$BPStatus[hypertension$BPStatus == "HTN3"] <- 0

str(hypertension)

hypertension$BPStatus <- as.numeric(hypertension$BPStatus)

sum(is.na(hypertension$BPStatus))

head(hypertension,n=10L)
```

Question 1 (c):
```{r}
library(RODBC)
library(sqldf)

myconn<-odbcConnect("qbs181","cwang","cwang@qbs181")
Demographics <-sqlQuery(myconn,"select * from Demographics")

test1 <- sqldf("select count(distinct ID) as Count from hypertension")

colnames(Demographics)

Demo_hyper <- sqldf("select A.contactid as ContactID,  A.tri_imaginecareenrollmentemailsentdate as EnrollmentEmailSentDate, A.tri_enrollmentcompletedate as EnrollmentCompleteDate, B.BPStatus, B.ObservedTime from Demographics A inner join hypertension B where A.contactid = B.ID")

head(Demo_hyper,n=10L)

```


Problem 1 (d):
```{r}
str(Demo_hyper)
Sys.setenv(TZ='EST')
summary(Demo_hyper)

#Sys.time()
#Sys.timezone()

Demo_hyper$EnrollmentCompleteDate <- as.Date(Demo_hyper$EnrollmentCompleteDate,format="%m/%d/%Y") 
Demo_hyper$EnrollmentEmailSentDate <- as.Date(Demo_hyper$EnrollmentEmailSentDate,format="%m/%d/%Y") 

library(lubridate)
library(dplyr)


test11 <- arrange(Demo_hyper, EnrollmentCompleteDate)
sum(is.na(Demo_hyper$EnrollmentCompleteDate))



test66better <- mdy(Demo_hyper$ObservedTime)
test66 <- mdy(Demo_hyper$ObservedTime)
Demo_hyper$ObservedTime <- as.Date(ifelse(test66 < Sys.Date(),  format(test66, "2016-%m-%d"), format(test66better,"2016-%m-%d")))



how_long <- interval(Demo_hyper$ObservedTime,Demo_hyper$EnrollmentCompleteDate)
time_diff <- as.period(how_long)
class(time_diff)

library(magrittr)
Demo_hyper%<>%mutate(TimeDiff=time_diff)


test888 <- (Demo_hyper$EnrollmentCompleteDate-Demo_hyper$ObservedTime)
test888 <- abs(as.double(test888)/(7))
head(test888) 

Demo_hyper%<>%mutate(Weekof = test888)

head(Demo_hyper, n=10L)



test3 <- aggregate(BPStatus~ContactID, Demo_hyper, mean)

head(test3, n=10L)
```

Question 1 (e):
```{r}
only.got.zero <- filter(test3,BPStatus==0)
head(only.got.zero, n=10L)
nrow(only.got.zero)


only.got.one <- filter(test3,BPStatus==1)

head(only.got.one, n=10L)
nrow(only.got.one)

got.one.and.zero <- filter(test3,BPStatus<1 & BPStatus>0)

head(got.one.and.zero, n=10L)
nrow(got.one.and.zero)


week1.uncontrolled <- filter(Demo_hyper, Weekof<=1&BPStatus==0)
nrow(week1.uncontrolled)
head(week1.uncontrolled)

week1.uncontrolled %>% distinct(ContactID)



week1.controlled <- filter(Demo_hyper, Weekof<=1&BPStatus==1)
nrow(week1.controlled)
head(week1.controlled)
week1.controlled %>% distinct(ContactID)



week12.uncontrolled <- filter(Demo_hyper, Weekof>=12&BPStatus==0)
nrow(week12.uncontrolled)
head(week12.uncontrolled)
week12.uncontrolled %>% distinct(ContactID)



week12.controlled <- filter(Demo_hyper, Weekof>=12&BPStatus==1)
nrow(week12.controlled)
head(week12.controlled)
week12.controlled %>% distinct(ContactID)

```


Question 2:

select A.*, B.tri_name 
into  [cwang].Demo_con
from Demographics A 
inner join Conditions B
on A.contactid = B.tri_patientid

select A.*, B.SenderName, convert(datetime, B.TextSentDate) as TextSentDate
into [cwang].Demo_con_text1
from [cwang].Demo_con A 
inner join TextMessages B 
on A.contactid = B.tri_contactId

select * from [cwang].Demo_con_text1


select ContactId, max(gendercode) as GenderCode, max(tri_age) as Age, max(parentcustomeridname) as ParentCustomerIdName, 
max(tri_imaginecareenrollmentstatus) as ImagineCareEnrollmentStatus, max(address1_stateorprovince) as Address_StateOrProvince, max(tri_imaginecareenrollmentemailsentdate) as ImagineCareEnrollmentEmailSentDate,
max(tri_enrollmentcompletedate) as EnrollmentCompletedate, max(gender) as Gender, max(Gender_Name) as GenderName,max(tri_name) as TrialName, max(SenderName) as SenderName,
max(TextSentDate) as TextSentDate
into [cwang].Demo_con_text3
from [cwang].Demo_con_text1
group by contactid

select * from [cwang].Demo_con_text3




Question 3:
```{r}
Conditions <-sqlQuery(myconn,"select * from Conditions")
TextMessages <- sqlQuery(myconn,"select * from TextMessages")


Demo_Con <-merge(Demographics, Conditions, by.x="contactid", by.y = "tri_patientid")

Demo_Con_Text <- merge(Demo_Con, TextMessages, by.x="contactid", by.y = "tri_contactId")


str(Demo_Con_Text$TextSentDate)


Demo_Con_Text$TextSentDate <- as.Date(Demo_Con_Text$TextSentDate,format="%m/%d/%y")
summary(Demo_Con_Text)

library(dplyr)

Distinct.Demo_Con_Text <- Demo_Con_Text %>% 
                              group_by(contactid) %>% 
                              slice(which.max(TextSentDate))
head(Distinct.Demo_Con_Text, n=10L)



#devtools::session_info('rmarkdown')
```

